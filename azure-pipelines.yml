resources:
- repo: self

phases:
- phase: Phase_1
  displayName: Build Libraries
  condition: succeeded()
  queue:
    name: Hosted Ubuntu 1604
    steps:
    - task: DotNetCoreInstaller@0
      displayName: install dotnet 2.1.401
      inputs:
        packageType: 'sdk'
        version: '2.1.401' 
    
    - task: DotNetCoreCLI@2
      displayName: dotnet build
      inputs:
        command: build
    
    - task: DotNetCoreCLI@2
      displayName: dotnet test
      inputs:
        command: test
        projects: 'test/**/*.csproj'
    
    - task: DotNetCoreCLI@2
      displayName: dotnet pack
      inputs:
        command: pack
        packDirectory: '$(Build.ArtifactStagingDirectory)/packages'
    
    - task: PublishBuildArtifacts@1
      displayName: publish artifacts
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'


- phase: Phase_2
  displayName: Build Documentation
  condition: succeeded()
  queue:
    name: Hosted Windows Container
    demands: npm

  steps:
  - task: chrismason.vsts-docfxtasks.docfx-extension-build-task.DocFxTask@0
    displayName: 'Create DocFx Documentation'
    inputs:
      solution: docs/docfx.json

  - task: ArchiveFiles@2
    displayName: 'Archive docs\_site'
    inputs:
      rootFolderOrFile: 'docs\_site'
      archiveFile: '$(Build.ArtifactStagingDirectory)/docs-$(Build.BuildNumber).zip'